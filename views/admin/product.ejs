<div class="container">
    <!-- List Container -->
    <div class="list-container" data-screen="product-screen">
        <div class="list-header">
            <h2>Danh Sách Sản Phẩm</h2>
            <button onclick="openAddModal()">Thêm Sản Phẩm</button>
        </div>
        <table id="productList">
            <thead>
                <tr>
                    <th>Tên</th>
                    <th>Thể Loại</th>
                    <th>Giá Nhập</th>
                    <th>Giá Bán</th>
                    <th>Ảnh</th>
                    <th>Số Lượng</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                <!-- Products will be listed here -->
            </tbody>
        </table>
        <div id="pagination" class="pagination"></div>
    </div>

    <!-- Modal for Editing Product -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Sửa Sản Phẩm</h2>
            <form id="editForm" enctype="multipart/form-data">
                <label for="editProductName">Tên Sản Phẩm</label>
                <input type="text" id="editProductName" placeholder="Nhập tên sản phẩm" required>

                <label for="editProductDescription">Mô tả</label>
                <input type="text" id="editProductDescription" placeholder="Nhập mô tả" required>

                <label for="editImportPrice">Giá Nhập</label>
                <input type="number" id="editImportPrice" placeholder="Nhập giá nhập" min="0" required>

                <label for="editSellingPrice">Giá Bán</label>
                <input type="number" id="editSellingPrice" placeholder="Nhập giá bán" min="0" required>

                <label for="category_id">Thể Loại</label>
                <select id="editProductCategory" class="input-field" required>
                </select>

                <label for="editImage">Ảnh</label>
                <input type="file" id="editImage">
                <img id="currentImagePreview" src="" alt="Current Image" width="50" style="display:none;">

                <button type="submit">Cập nhật</button>
            </form>
        </div>
    </div>

    <!--Modal for Adding Product-->
    <div id="productModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeAddModal()">&times;</span>
            <h2>Thêm Mới Sản Phẩm</h2>
            <form id="productForm" enctype="multipart/form-data">
                <label for="productName">Tên Sản Phẩm</label>
                <input type="text" id="productName" placeholder="Nhập tên sản phẩm" required>

                <label for="productDescription">Mô tả</label>
                <input type="text" id="productDescription" placeholder="Nhập mô tả" required>

                <label for="importPrice">Giá Nhập</label>
                <input type="number" id="importPrice" placeholder="Nhập giá nhập" required min="0">

                <label for="productCategory">Thể Loại</label>
                <select id="productCategory" class="input-field" required>
                    <!-- Options will be dynamically loaded -->
                </select>

                <label for="sellingPrice">Giá Bán</label>
                <input type="number" id="sellingPrice" placeholder="Nhập giá bán" min="0" required>

                <label for="productQuantity">Số Lượng</label>
                <input type="number" id="productQuantity" placeholder="Nhập số lượng" min="0" required>

                <label for="productImage">Ảnh</label>
                <input type="file" id="productImage" required>

                <button type="submit">Thêm Sản Phẩm</button>
            </form>
        </div>
    </div>

    <div id="detailModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeDetailModal()">&times;</span>
            <h2>Chi Tiết Sản Phẩm</h2>
            <div class="modal-body">
                <div class="detail-item">
                    <strong>Tên:</strong>
                    <span id="detailName">Tên Sản Phẩm</span>
                </div>
                <div class="detail-item">
                    <strong>Giá Nhập:</strong>
                    <span id="detailImportPrice">Giá Nhập Sản Phẩm</span>
                </div>
                <div class="detail-item">
                    <strong>Giá Bán:</strong>
                    <span id="detailPriceSelling">Giá Bán Sản Phẩm</span>
                </div>
                <div class="detail-item">
                    <strong>Số Lượng:</strong>
                    <span id="detailQuantity">Số Lượng Sản Phẩm</span>
                </div>
                <div class="detail-item">
                    <strong>Trạng thái:</strong>
                    <span id="detailStatus">Trạng Thái Sản Phẩm</span>
                </div>
                <div class="detail-item">
                    <strong>Số Lượng Bán Ra:</strong>
                    <span id="detailSoldQuantity">Số Lượng Sản Phẩm Bán</span>
                </div>
                <div class="detail-item">
                    <strong>Thể Loại:</strong>
                    <span id="detailCategory">Thể Loại Sản Phẩm</span>
                </div>
                <div class="detail-item">
                    <strong>Mô Tả:</strong>
                    <span id="detailDescription">Mô Tả Sản Phẩm</span>
                </div>
                <div class="detail-item">
                    <strong>Ảnh:</strong>
                    <div class="image-container">
                        <img id="detailImage" src="" alt="Category Image">
                    </div>
                </div>
            </div>

            <!-- Actions -->
            <div class="modal-actions">
                <button>Chỉnh sửa</button>
            </div>
        </div>
    </div>

</div>
<script>
    const apiUrl = 'api/products/get_list_product';
    let products = [];
    let currentPage = 1;
    const limit = 5;
    const productForm = document.getElementById('productForm');
    var addModal = document.getElementById("productModal");
    var editModal = document.getElementById("editModal");
    var closeBtn = document.getElementById("closeModal")

    function openAddModal() {
        editModal.style.display = "none";
        addModal.style.display = "flex";
    }


    function closeAddModal() {
        const modal = document.getElementById('productModal');
        console.log(modal);
        if (modal) {
            modal.style.display = "none";
        } else {
            console.error("Add Modal not found!");
        }
    }

    function closeEditModal() {
        const modal = document.getElementById('editModal');
        console.log(modal);

        if (modal) {
            modal.style.display = "none";
        } else {
            console.error("Edit Modal not found!");
        }
    }

    function closeDetailModal() {
        document.getElementById('detailModal').style.display = 'none';
    }


    function fetchProducts() {
        fetch(apiUrl)
            .then(response =>
                response.json())
            .then(data => {
                products = data
                renderProducts();
                renderPagination()
            })
            .catch(error => console.error('Error fetching products:', error));

    }

    function renderProducts() {
        const productList = document.getElementById('productList').getElementsByTagName('tbody')[0];
        productList.innerHTML = '';

        const startIndex = (currentPage - 1) * limit;
        const endIndex = startIndex + limit;
        const paginatedProducts = products.slice(startIndex, endIndex);

        paginatedProducts.forEach(product => {
            const row = document.createElement('tr');
            console.log(product);

            row.innerHTML = `
                      <td>${truncateText(product.name, 50)}</td>
                      <td>${product.category_id.name}</td> 
                      <td>${product.import_price.toLocaleString('vi')}</td>
                      <td>${product.price_selling.toLocaleString('vi')}</td>
                      <td><img src="${product.image}" alt="${product.name}" width="100"></td>
                      <td><input type="number" class="form-control form-control-sm quantity-input" value="${product.quantity}" min="0" data-product-id="${product._id}" onchange="updateProductQuantity(event)" style="width: 80px;" /></td>
                  <td>
                  <div style="button-group">
                      <button class="btn-edit" onclick="openDetailModal('${product._id}', '${product.name}', '${product.description}', '${product.import_price}','${product.price_selling}' ,'${product.category_id.name}', '${product.category_id._id}', '${product.quantity}', '${product.soldQuantity}', '${product.status}', '${product.image}')">Chi Tiết</button>
                      <button class="btn-delete" onclick="updateProduct('${product._id}')">${product.status ? "Ẩn" : "Hiển Thị"}</button>
                  </div>
                  </td>
      `;
            productList.appendChild(row);
        });
    }

    productForm.addEventListener('submit', function (e) {
        e.preventDefault();

        const name = document.getElementById('productName').value;
        const description = document.getElementById('productDescription').value;
        const import_price = parseFloat(document.getElementById('importPrice').value);
        const price_selling = parseFloat(document.getElementById('sellingPrice').value);
        const image = document.getElementById('productImage').files[0];
        const quantity = document.getElementById('productQuantity').value;
        const category_id = document.getElementById('productCategory').value;

        if (import_price <= price_selling) {
            alert('Giá Nhập phải cao hơn giá xuất');
            return;
        }

        const formData = new FormData();
        formData.append('name', name);
        formData.append('description', description);
        formData.append("quantity", quantity)
        formData.append('import_price', import_price);
        formData.append('price_selling', price_selling);
        formData.append('image', image);
        formData.append('category_id', category_id);

        fetch('api/products/add_product', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {

                fetchProducts();
                productForm.reset();

            })
            .catch(error => console.error('Error adding product:', error));
    });

    function openEditModal(id, name, description, import_price, price_selling, category_id, image) {
        document.getElementById('editProductName').value = name;
        document.getElementById('editProductDescription').value = description;
        document.getElementById('editImportPrice').value = import_price;
        document.getElementById('editSellingPrice').value = price_selling;

        const imagePreview = document.getElementById('currentImagePreview');
        if (image) {
            imagePreview.src = image;
            imagePreview.style.display = 'block';
        } else {
            imagePreview.style.display = 'none';
        }

        const categoryDropdown = document.getElementById('editProductCategory');
        fetch('api/categoryProducts/get_list_Category_Product')
            .then(response => response.json())
            .then(categories => {
                categoryDropdown.innerHTML = '<option value="">Chọn Thể Loại</option>';

                categories.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category._id;
                    option.textContent = category.name;

                    if (category._id === category_id) {
                        option.selected = true;
                    }

                    categoryDropdown.appendChild(option);
                });
            })
            .catch(error => console.error('Error fetching categories:', error));
        const modal = document.getElementById('editModal');
        modal.style.display = "flex";

        const editForm = document.getElementById('editForm');
        editForm.onsubmit = function (e) {
            e.preventDefault();

            const updatedName = document.getElementById('editProductName').value;
            const updatedDescription = document.getElementById('editProductDescription').value;
            const updatedImportPrice = parseFloat(document.getElementById('editImportPrice').value);
            const updatedSellingPrice = parseFloat(document.getElementById('editSellingPrice').value);
            const updatedImage = document.getElementById('editImage').files[0];
            const updatedCategoryId = categoryDropdown.value;

            if (updatedImportPrice <= updatedSellingPrice) {
                alert('Giá Nhập phải cao hơn giá xuất');
                return; 
            }

            const formData = new FormData();
            formData.append('name', updatedName);
            formData.append('description', updatedDescription);
            formData.append('import_price', updatedImportPrice);
            formData.append('price_selling', updatedSellingPrice);
            formData.append('category_id', updatedCategoryId);
            if (updatedImage) {
                formData.append('image', updatedImage);
            }

            fetch(`api/products/update_product/${id}`, {
                method: 'PUT',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    console.log('Product updated:', data);
                    fetchProducts();
                    modal.style.display = "none";
                })
                .catch(error => console.error('Error updating product:', error));
        };
    }

    function truncateText(text, maxLength) {
        if (text.length > maxLength) {
            return text.substring(0, maxLength) + '...';
        }
        return text;
    }

    function renderPagination() {
        const paginationContainer = document.getElementById('pagination');
        paginationContainer.innerHTML = '';

        const totalPages = Math.ceil(products.length / limit);

        for (let i = 1; i <= totalPages; i++) {
            const pageButton = document.createElement('button');
            pageButton.innerText = i;
            pageButton.className = i === currentPage ? 'active' : '';
            pageButton.onclick = () => {
                currentPage = i;
                renderProducts()
            };
            paginationContainer.appendChild(pageButton);
        }
    }

    function fetchCategoriesForDropdown() {
        const categoryDropdown = document.getElementById('productCategory');
        fetch('api/categoryProducts/get_list_Category_Product')
            .then(response => response.json())
            .then(data => {
                categoryDropdown.innerHTML = '<option value="">Chọn Thể Loại</option>';
                data.forEach(category => {
                    const option = document.createElement('option');
                    option.value = category._id;
                    option.textContent = category.name;
                    categoryDropdown.appendChild(option);
                });
            })
            .catch(error => console.error('Error fetching categories:', error));
    }


    // Handle delete product
    function deleteProduct(id) {
        fetch(`api/products/delete_product/${id}`, {
            method: 'DELETE'
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    fetchProducts();
                } else {
                    alert('Có lỗi xảy ra khi xóa sản phẩm');
                }
            })
            .catch(error => console.error('Error deleting product:', error));
    }

    function updateProductQuantity(event) {
        const inputElement = event.target;
        const productId = inputElement.getAttribute("data-product-id");
        const updatedQuantity = inputElement.value;

        console.log(inputElement);

        fetch(`api/products/update_quantity_product/${productId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                quantity: updatedQuantity,
            })
        })
            .then(response => response.json())
            .then(data => {
                if (data.status === 200) {
                    console.log('Product updated successfully');
                } else {
                    alert('Thất bại thêm số lượng');
                }
            })
            .catch(error => console.error('Error updating product status:', error));
    }

    function updateProduct(id) {
        fetch(`api/products/update_product_status/${id}`, {
            method: 'PUT',
        })
            .then(response => response.json())
            .then(data => {
                alert('Cập nhật trạng thái thành công');
                fetchProducts();
                fetchCategoriesForDropdown()
            })
            .catch(error => console.error('Error changing product status:', error));
    }

    function openDetailModal(id, name, description, importPrice, priceSelling, categoryName, categoryId, quantity, soldQuantity, status, image) {
        document.getElementById('detailName').textContent = name;
        document.getElementById('detailImportPrice').textContent = `${importPrice.toLocaleString('vi')} VNĐ`;
        document.getElementById('detailPriceSelling').textContent = `${priceSelling.toLocaleString('vi')} VNĐ`;
        document.getElementById('detailQuantity').textContent = quantity > 0 ? quantity : "Hết Hàng";
        document.getElementById('detailDescription').textContent = description;
        document.getElementById('detailStatus').textContent = status === 'true' ? 'Hiển thị' : 'Ẩn';
        document.getElementById('detailSoldQuantity').textContent = soldQuantity;
        document.getElementById('detailCategory').textContent = categoryName;
        document.getElementById('detailImage').src = image;

        const editButton = document.querySelector('#detailModal .modal-actions button:nth-child(1)');

        editButton.onclick = function () {
            closeDetailModal();
            openEditModal(id, name, description, importPrice, priceSelling, categoryId, image);
        };
        document.getElementById('detailModal').style.display = 'flex';
    }

    fetchProducts();
    fetchCategoriesForDropdown();
</script>
<div class="container">
    <!-- List Container -->
    <div class="list-container" data-screen="service-screen">
        <div class="list-header">
            <h2>Danh Sách Dịch Vụ</h2>
            <button onclick="openAddModal()">Thêm Dịch Vụ</button>
        </div>
        <table id="serviceList">
            <thead>
                <tr>
                    <th>Tên</th>
                    <th>Danh mục</th>
                    <th>Giá</th>
                    <th>Thời lượng</th>
                    <th>Ảnh</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
                <!-- Services will be listed here -->
            </tbody>
        </table>
        <div id="pagination" class="pagination"></div>
    </div>

    <!-- Modal for Editing Service -->
    <div id="editModal" class="modal" >
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Sửa Dịch Vụ</h2>
            <form id="editForm" enctype="multipart/form-data">
                <label for="editName">Tên Dịch Vụ</label>
                <input type="text" id="editName" placeholder="Nhập tên dịch vụ" required>

                <label for="editIdCategory">Danh mục</label>
                <select id="editIdCategory" class="input-field" required>
                    <!-- Dynamic category options will be populated here -->
                </select>

                <label for="editDescription">Mô tả</label>
                <input type="text" id="editDescription" placeholder="Nhập mô tả">

                <label for="editPrice">Giá</label>
                <input type="number" id="editPrice" placeholder="Nhập giá" min="0" required>

                <label for="editDuration">Thời lượng (phút)</label>
                <input type="number" id="editDuration" placeholder="Nhập thời lượng" min="0" required>

                <label for="editImage">Ảnh</label>
                <input type="file" id="editImage">
                <img id="currentImagePreview" src="" alt="Current Image" width="50" style="display:none;">
                <button type="submit">Cập nhật</button>
            </form>
        </div>
    </div>

    <div id="serviceModal" class="modal">
        <div class="modal-content" >
            <span class="close" onclick="closeAddModal()">&times;</span>
            <h2>Thêm Mới Dịch Vụ</h2>
            <form id="serviceForm" enctype="multipart/form-data">
                <label for="name">Tên Dịch Vụ</label>
                <input type="text" id="name" placeholder="Nhập tên dịch vụ" required>

                <label for="id_category">Danh mục</label>
                <select id="id_category" class="input-field" required>
                    <!-- Dynamic category options will be populated here -->
                </select>

                <label for="description">Mô tả</label>
                <input type="text" id="description" placeholder="Nhập mô tả">

                <label for="price">Giá</label>
                <input type="number" id="price" placeholder="Nhập giá" min="0" required>

                <label for="duration">Thời lượng (phút)</label>
                <input type="number" id="duration" placeholder="Nhập thời lượng" min="0" required>

                <label for="images">Ảnh</label>
                <input type="file" id="images" required>

                <button type="submit">Thêm Dịch Vụ</button>
            </form>
        </div>
    </div>
</div>
<script type="text/javascript">
    const apiUrl = 'api/services/get_list_service';
    let services = [];
    let currentPage = 1;
    const limit = 5;
    var addModal = document.getElementById("serviceModal");
    var editModal = document.getElementById("editModal");
    var closeBtn = document.getElementById("closeModal")

    function openAddModal() {
        editModal.style.display = "none";
        addModal.style.display = "flex";
    }

    function closeAddModal() {
        const modal = document.getElementById('serviceModal');
        console.log(modal);
        if (modal) {
            modal.style.display = "none";
        } else {
            console.error("Add Modal not found!");
        }
    }

    function closeEditModal() {
        const modal = document.getElementById('editModal');
        console.log(modal);

        if (modal) {
            modal.style.display = "none";
        } else {
            console.error("Edit Modal not found!");
        }
    }
    function fetchCategories() {
        fetch('api/categorys/get_list_category')
            .then(response => response.json())
            .then(data => {
                const categorySelect = document.getElementById('id_category');
                const editCategorySelect = document.getElementById('editIdCategory');
                categorySelect.innerHTML = '';
                editCategorySelect.innerHTML = '';

                data.forEach(category => {
                    const option = `<option value="${category._id}">${category.name}</option>`;
                    categorySelect.innerHTML += option;
                    editCategorySelect.innerHTML += option;
                });
            })
            .catch(error => console.error('Error fetching categories:', error));
    }

    function fetchServices() {
        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                services = data;
                renderServices();
                renderPagination();
            })
            .catch(error => console.error('Error fetching services:', error));
    }

    function renderServices() {
        const serviceList = document.getElementById('serviceList').getElementsByTagName('tbody')[0];
        serviceList.innerHTML = '';

        const startIndex = (currentPage - 1) * limit;
        const endIndex = startIndex + limit;
        const paginatedServices = services.slice(startIndex, endIndex);

        paginatedServices.forEach(service => {
            const row = document.createElement('tr');
            row.innerHTML = `
            <td>${truncateText(service.name, 50)}</td>
            <td>${service.id_category.name}</td>
            <td>${service.price.toLocaleString('vi')}</td>
            <td>${service.duration}</td>
            <td><img src="${service.images}" alt="${service.name}" width="100"></td>
            <td>${service.status ? 'Hiển thị' : 'Ẩn'}</td>
            <td>
                <div style="display: flex; gap: 10px; justify-content: flex-start; align-items: center;">
                    <button class="btn-detail" onclick="openEditModal('${service._id}', '${service.name}', '${service.id_category._id}', '${service.description}', ${service.price}, ${service.duration}, '${service.images}', ${service.status})">Chi tiết</button>
                    <button class="btn-edit" onclick="openEditModal('${service._id}', '${service.name}', '${service.id_category._id}', '${service.description}', ${service.price}, ${service.duration}, '${service.images}', ${service.status})">Sửa</button>
                    <button class="btn-delete" onclick="deleteService('${service._id}',${service.status})">Ẩn</button>
                </div>
            </td>`
                ;
            serviceList.appendChild(row);
        });
    }

    // Render pagination controls
    function renderPagination() {
        const paginationContainer = document.getElementById('pagination');
        paginationContainer.innerHTML = '';

        const totalPages = Math.ceil(services.length / limit);

        for (let i = 1; i <= totalPages; i++) {
            const pageButton = document.createElement('button');
            pageButton.innerText = i;
            pageButton.className = i === currentPage ? 'active' : '';
            pageButton.onclick = () => {
                currentPage = i;
                renderServices(); // Render selected page
            };
            paginationContainer.appendChild(pageButton);
        }
    }

    const serviceForm = document.getElementById('serviceForm');
    serviceForm.addEventListener('submit', function (e) {
        e.preventDefault();

        const name = document.getElementById('name').value;
        const id_category = document.getElementById('id_category').value;
        const description = document.getElementById('description').value;
        const price = document.getElementById('price').value;
        const duration = document.getElementById('duration').value;
        const image = document.getElementById('images').files[0];

        const formData = new FormData();
        formData.append('name', name);
        formData.append('id_category', id_category);
        formData.append('description', description);
        formData.append('price', price);
        formData.append('duration', duration);
        formData.append('images', image);

        fetch('api/services/add_service', {
            method: 'POST',
            body: formData,
        })
            .then(response => response.json())
            .then(data => {
                fetchServices();
                closeAddModal();
                serviceForm.reset();
            })
            .catch(error => console.error('Error adding service:', error));
    });


    function truncateText(text, maxLength) {
        if (text.length > maxLength) {
            return text.substring(0, maxLength) + '...';
        }
        return text;
    }

    function openEditModal(id, name, id_category, description, price, duration, images) {
        document.getElementById('editName').value = name;
        document.getElementById('editDescription').value = description;
        document.getElementById('editPrice').value = price;
        document.getElementById('editDuration').value = duration;
        document.getElementById('editIdCategory').value = id_category;

        const imagePreview = document.getElementById('currentImagePreview');
        if (images) {
            imagePreview.src = images;
            imagePreview.style.display = 'block';
        } else {
            imagePreview.style.display = 'none';
        }

        const modal = document.getElementById('editModal');
        modal.style.display = "flex";

        const editForm = document.getElementById('editForm');
        editForm.onsubmit = function (e) {
            e.preventDefault();
            const updatedName = document.getElementById('editName').value;
            const updatedDescription = document.getElementById('editDescription').value;
            const updatedPrice = document.getElementById('editPrice').value;
            const updatedDuration = document.getElementById('editDuration').value;
            const updatedIdCategory = document.getElementById('editIdCategory').value;
            const updatedImage = document.getElementById('editImage').files[0];


            const formData = new FormData();
            formData.append('name', updatedName);
            formData.append('description', updatedDescription);
            formData.append('price', updatedPrice);
            formData.append('duration', updatedDuration);
            formData.append('id_category', updatedIdCategory);
            if (updatedImage) {
                formData.append('images', updatedImage);
            }
            fetch(`api/services/update_service/${id}`, {
                method: 'PUT',
                body: formData
            })
                .then(
                    response => response.json()
                )
                .then(data => {
                    console.log('Update response:', data);
                    fetchServices();
                    modal.style.display = "none";
                })
                .catch(error => {
                    console.error('Error updating service:', error);
                });
        };
    }


    function deleteService(id,status) {
        fetch(`api/services/updateStatus/${id}`, {
            method: 'PUT',
            body:!status
        })
            .then(response => response.json())
            .then(data => {
                fetchServices();
            })
            .catch(error => console.error('Error deleting service:', error));
    }
    // Initialize page
    fetchCategories();
    fetchServices();
</script>
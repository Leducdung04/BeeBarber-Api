<div class="container">
    <h2>Danh Sách Barber</h2>
    <div class="grid-container">
        <div class="form-container">
            <h2 id="form-title">Thêm Barber</h2>
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" class="input-field">
            </div>
            <div class="form-group">
                <label for="experience">Experience:</label>
                <input type="number" id="experience" class="input-field">
            </div>
            <div class="form-group">
                <label for="status">Status:</label>
                <select id="status" class="input-field">
                    <option value="true">Hoạt động</option>
                    <option value="false">Đã nghỉ</option>
                </select>
            </div>
            <div class="form-group">
                <label for="image">Barber Image:</label>
                <input type="file" id="image" class="input-field" accept="image/*">
            </div>
            <button class="btn-add" id="submit-btn" onclick="addBarber()">Add Barber</button>
            <button class="btn-cancel" id="cancel-btn" onclick="cancelEdit()" style="display: none;">Cancel</button>
        </div>

        <!-- Barber List -->
        <div class="barber-list-container" id="barber-list">
            <!-- Barber items will be dynamically added here -->
        </div>
    </div>
</div>
<script>
    const apiUrl = 'api/get_list_barber';
    let editBarberId = null;

    // Fetch and display barbers
    async function fetchBarbers() {
        try {
            const response = await fetch(apiUrl);
            const barbers = await response.json();
            const barberListContainer = document.getElementById('barber-list');
            barberListContainer.innerHTML = '';  // Clear existing barbers

            barbers.forEach(barber => {
                const barberItem = document.createElement('div');
                barberItem.classList.add('barber-item');
                barberItem.innerHTML = `
                    <img style="width:120px;height:200px" src="${barber.image || "../admin/img/barberBackgroug.png"}" alt="Barber Image">
                    <p>Họ tên: ${barber.name}</p>
                    <p>Năm kinh nghiệm: ${barber.experience} years</p>
                    <p>Status: ${barber.status ? 'Hoạt động' : 'Đã nghỉ'}</p>
                    <button class="btn-update" onclick="editBarber('${barber._id}', '${barber.name}', ${barber.experience}, ${barber.status}, '${barber.image}')">Edit</button>
                `;
                barberListContainer.appendChild(barberItem);
            });
        } catch (error) {
            console.error('Error fetching barbers:', error);
        }
    }

    // Add new barber
    async function addBarber() {
        const name = document.getElementById('name').value;
        const experience = document.getElementById('experience').value;
        const status = document.getElementById('status').value === 'true';
        const imageFile = document.getElementById('image').files[0];

        if (!name || !experience) {
            alert('Please fill in all fields.');
            return;
        }

        const formData = new FormData();
        formData.append('name', name);
        formData.append('experience', experience);
        formData.append('status', status);
        formData.append('image', imageFile);  // Append the image if it exists

        try {
            if (editBarberId) {
                // Update existing barber
                await fetch(`api/Update_Barbers/${editBarberId}`, {
                    method: 'PUT',
                    body: formData,
                });
                editBarberId = null; // Reset ID after update
                document.getElementById('form-title').innerText = 'Add Barber';
                document.getElementById('submit-btn').innerText = 'Add Barber';
                document.getElementById('cancel-btn').style.display = 'none';  // Hide cancel button
            } else {
                // Add new barber
                await fetch('api/add_Barbers', {
                    method: 'POST',
                    body: formData,
                });
            }
            fetchBarbers();  // Refresh barber list after adding or updating
        } catch (error) {
            console.error('Error adding or updating barber:', error);
        }
    }

    // Edit barber
    function editBarber(id, name, experience, status, image) {
        // Prefill the form with the existing barber data for editing
        document.getElementById('name').value = name;
        document.getElementById('experience').value = experience;
        document.getElementById('status').value = status.toString();
        document.getElementById('form-title').innerText = 'Edit Barber';
        document.getElementById('submit-btn').innerText = 'Update Barber';
        document.getElementById('cancel-btn').style.display = 'inline-block';  // Show cancel button
        editBarberId = id;
    }

    // Cancel editing
    function cancelEdit() {
        editBarberId = null;
        document.getElementById('form-title').innerText = 'Add Barber';
        document.getElementById('submit-btn').innerText = 'Add Barber';
        document.getElementById('cancel-btn').style.display = 'none';  // Hide cancel button
        document.getElementById('name').value = '';
        document.getElementById('experience').value = '';
        document.getElementById('status').value = 'true';
    }

    // Load the list of barbers when the page loads
    fetchBarbers();
</script>